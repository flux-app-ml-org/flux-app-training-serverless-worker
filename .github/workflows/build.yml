name: Build on Push to Build Branch

on:
  push:
    branches:
      - main
    # Skip builds for documentation-only changes
    paths-ignore:
      - '**.md'
      - 'docs/**'
      - '.gitignore'
      - 'LICENSE'
  # Allow manual triggering with option to skip build
  workflow_dispatch:
    inputs:
      skip_build:
        description: 'Skip the build step'
        required: false
        default: 'false'
        type: choice
        options:
          - 'false'
          - 'true'

jobs:
  test:
    runs-on: ubuntu-latest
    # Skip if commit message contains [skip ci] or [ci skip]
    if: "!contains(github.event.head_commit.message, '[skip ci]') && !contains(github.event.head_commit.message, '[ci skip]')"
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Set up Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      
      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libsqlite3-dev libffi-dev libbz2-dev libncurses-dev \
                                 libreadline-dev libssl-dev zlib1g-dev libgdbm-dev \
                                 liblzma-dev tk-dev
      
      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements-dev.txt
      
      - name: Run tests
        run: python3 -m pytest -xvs tests/ -p no:cov

  build:
    runs-on: ubuntu-latest
    needs: test  # This ensures build only runs after tests pass
    # Skip build if:
    # 1. Commit message contains [skip ci] or [ci skip]
    # 2. Manual dispatch with skip_build = true
    # 3. Commit message contains [skip build]
    if: |
      !contains(github.event.head_commit.message, '[skip ci]') && 
      !contains(github.event.head_commit.message, '[ci skip]') && 
      !contains(github.event.head_commit.message, '[skip build]') &&
      (github.event_name != 'workflow_dispatch' || github.event.inputs.skip_build != 'true')
    # Permissions to use OIDC token authentication
    permissions:
      contents: read
      id-token: write
      # Allows pushing to the GitHub Container Registry
      packages: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      
      - name: Set up Depot
        uses: depot/setup-action@v1
      
      - name: Build and push Docker image
        uses: depot/build-push-action@v1
        with:
          project: wf2rwqhlzs
          context: .
          push: true
          tags: |
            fajyz/flux-app-training-serverless-worker:${{ github.sha }}
          platforms: linux/amd64

